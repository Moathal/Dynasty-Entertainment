"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcapstone2_kanban"] = self["webpackChunkcapstone2_kanban"] || []).push([["methods"],{

/***/ "./src/modules/APIsGET&POST.js":
/*!*************************************!*\
  !*** ./src/modules/APIsGET&POST.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAnime\": () => (/* binding */ getAnime),\n/* harmony export */   \"getComments\": () => (/* binding */ getComments),\n/* harmony export */   \"getLikes\": () => (/* binding */ getLikes),\n/* harmony export */   \"postComments\": () => (/* binding */ postComments),\n/* harmony export */   \"postLikes\": () => (/* binding */ postLikes)\n/* harmony export */ });\nconst getAnime = async (url) => {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      'X-RapidAPI-Key': '27a477cbdamsh49c8e3678f442ecp14a4f5jsn0efcece4205d',\r\n      'X-RapidAPI-Host': 'anime-db.p.rapidapi.com',\r\n    },\r\n  };\r\n  const response = await fetch(url, options).then((res) => res.json());\r\n  return response.data;\r\n};\r\n\r\nconst getLikes = async (url) => {\r\n  const response = await fetch(url).then((res) => res.json());\r\n  return response;\r\n};\r\n\r\nasync function getComments(url) {\r\n  const response = await fetch(url).then((res) => res.json());\r\n  return response;\r\n}\r\n\r\nconst postComments = async (id, username, comment, url) => {\r\n  await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      item_id: id,\r\n      username,\r\n      comment,\r\n    }),\r\n  });\r\n};\r\n\r\nconst postLikes = async (id, url) => {\r\n  await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      item_id: id,\r\n    }),\r\n  });\r\n};\r\n\n\n//# sourceURL=webpack://capstone2-kanban/./src/modules/APIsGET&POST.js?");

/***/ }),

/***/ "./src/modules/methods.js":
/*!********************************!*\
  !*** ./src/modules/methods.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Methods)\n/* harmony export */ });\n/* harmony import */ var _APIsGET_POST_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./APIsGET&POST.js */ \"./src/modules/APIsGET&POST.js\");\n\r\n\r\nclass Methods {\r\n  constructor() {\r\n    this.animes = [];\r\n  }\r\n\r\n  async loadData(movieList, animeAPI, likesAPI) {\r\n    const list = await (0,_APIsGET_POST_js__WEBPACK_IMPORTED_MODULE_0__.getAnime)(animeAPI);\r\n    const likes = await (0,_APIsGET_POST_js__WEBPACK_IMPORTED_MODULE_0__.getLikes)(likesAPI);\r\n    if (Array.isArray(list)) movieList.innerHTML = '';\r\n    list.forEach((anime, i) => {\r\n      const li = document.createElement('li');\r\n      let like = [];\r\n      like = likes.filter((item) => item.item_id === `${i}`);\r\n      let liked = 0;\r\n      if (like.length > 0) liked = like[0].likes;\r\n      li.innerHTML = `<img src=\"${anime.image}\"><h2 id=\"title-${i}\">${anime.title}</h2>\r\n                  <div class=\"container\">\r\n                  <button id=\"cmntb-${i}\"class=\"learn-more\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                    <span class=\"circle\" aria-hidden=\"true\">\r\n                      <span id=\"cmnti-${i}\" class=\"icon arrow\"></span>\r\n                    </span>\r\n                    <span id=\"cmntt-${i}\" class=\"button-text\">Comment</span>\r\n                  </button>\r\n                </div>\r\n                  <div id=\"liked-${i}\" class=\"toggle\">\r\n              <input id=\"likei-${i}\" type=\"checkbox\" class=\"heart-check\">\r\n            \r\n              <label id=\"likel-${i}\" for=\"heart-check\" class=\"heart\">\r\n                <svg id=\"likes-${i}\" viewBox=\"0 0 24 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n                  <path id=\"likep-${i}\" class=\"initial\" d=\"M11.8189091,20.3167303 C17.6981818,16.5505143 20.6378182,12.5122542 20.6378182,8.20195014 C20.6378182,5.99719437 18.8550242,4 16.3283829,4 C13.777264,4 12.5417153,6.29330284 11.8189091,6.29330284 C11.0961029,6.29330284 10.1317157,4 7.30943526,4 C4.90236126,4 3,5.64715533 3,8.20195014 C3,12.5122346 5.93963637,16.5504946 11.8189091,20.3167303 Z\"></path>\r\n                  <path class=\"stroke\" fill=\"none\" d=\"M11.8189091,20.3167303 C17.6981818,16.5505143 20.6378182,12.5122542 20.6378182,8.20195014 C20.6378182,5.99719437 18.8550242,4 16.3283829,4 C13.4628072,4 10.284995,6.64162063 10.284995,8.70392731 C10.284995,10.0731789 10.8851209,10.9874447 11.8189091,10.9874447 C12.7526973,10.9874447 13.3528232,10.0731789 13.3528232,8.70392731 C13.3528232,6.64162063 10.1317157,4 7.30943526,4 C4.90236126,4 3,5.64715533 3,8.20195014 C3,12.5122346 5.93963637,16.5504946 11.8189091,20.3167303 Z\"></path>\r\n                </svg>\r\n              </label>\r\n            </div>\r\n            <p class=\"card-body__likes like-text\"> <span id=\"span-${i}\">${liked}</span> likes</p>`;\r\n      movieList.appendChild(li);\r\n      const item = {\r\n        id: i,\r\n        title: anime.title,\r\n        synopsis: anime.synopsis,\r\n        image: anime.image,\r\n        likes: liked,\r\n        comments: 0,\r\n      };\r\n      this.animes.push(item);\r\n      this.itemsCounter();\r\n    });\r\n  }\r\n\r\n  increaseLikes(index) {\r\n    const likeSpan = document.getElementById(`span-${index}`);\r\n    this.animes[index].likes += 1;\r\n    likeSpan.innerText = this.animes[index].likes;\r\n  }\r\n\r\n  itemsCounter() {\r\n    const animesNum = document.getElementById('animesNum');\r\n    animesNum.innerText = this.animes.length;\r\n  }\r\n\r\n  async loadModalInfo(index, commentsAPI) {\r\n    const anime = this.animes[index];\r\n    this.animes[index].comments = 0;\r\n    document.getElementById('commentsNumber').innerText = this.animes[index].comments;\r\n    document.getElementById('animeDescription').innerText = anime.synopsis;\r\n    document.getElementById('modal-title').innerText = anime.title;\r\n    document.getElementById('modal-image').setAttribute('src', anime.image);\r\n    document.getElementById('exampleModalLabel').innerText = anime.title;\r\n    const comments = document.querySelector('.comments');\r\n    comments.id = `anime-${index}`;\r\n    comments.innerHTML = '';\r\n    const commentsURL = `${commentsAPI}?item_id=${index}`;\r\n    const commentsArray = await (0,_APIsGET_POST_js__WEBPACK_IMPORTED_MODULE_0__.getComments)(commentsURL);\r\n    if (Array.isArray(commentsArray)) {\r\n      commentsArray.forEach((comment) => {\r\n        this.addComment(\r\n          index,\r\n          comment.username,\r\n          comment.creation_date,\r\n          comment.comment,\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  addComment(index, username, creationDate, comment) {\r\n    const card = document.createElement('div');\r\n    const comments = document.querySelector('.comments');\r\n    const commentsNum = document.getElementById('commentsNumber');\r\n    card.className = 'card';\r\n    card.innerHTML = `<div class=\"card\">\r\n                  <div class=\"comment-head\">\r\n                  <h5 class=\"username\">${username}</h5>\r\n                  <span class=\"date\">${creationDate}</span>\r\n                  </div>\r\n                  <p class=\"comment-block\">${comment}</p>\r\n                </div>`;\r\n    this.animes[index].comments += 1;\r\n    commentsNum.innerText = this.animes[index].comments;\r\n    comments.appendChild(card);\r\n  }\r\n\r\n  async addNewComment(commentsAPI) {\r\n    const username = document.getElementById('InputName');\r\n    const comment = document.getElementById('commentToPost');\r\n    const container = document.querySelector('.comments');\r\n    const index = container.id.substring(6, container.id.length);\r\n    const currentDate = new Date();\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n    const day = String(currentDate.getDate() + 1).padStart(2, '0');\r\n    const url = `${commentsAPI}?item_id=${index}`;\r\n    await (0,_APIsGET_POST_js__WEBPACK_IMPORTED_MODULE_0__.postComments)(index, username.value, comment.value, url);\r\n    this.addComment(\r\n      index,\r\n      username.value,\r\n      `${currentDate.getFullYear()}-${month}-${day}`,\r\n      comment.value,\r\n    );\r\n    username.value = '';\r\n    comment.value = '';\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://capstone2-kanban/./src/modules/methods.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/modules/methods.js"));
/******/ }
]);